"Games"
{
    "tf2classic"
    {
		"Addresses"
		{
			"CTFGameStats"
			{
				"linux"
				{
					"signature"		"CTFGameStats"
				}
			}
			"CTFGameRules"
			{
				"linux"
				{
					"signature"		"CTFGameRules"
				}
			}
			"CTFObjectiveResource"
			{
				"linux"
				{
					"signature"		"CTFObjectiveResource"
				}
			}
			"CTFLogicDomination"
			{
				"linux"
				{
					"signature"		"CTFLogicDomination"
				}
			}
			
			//Midhooks
			"CBaseObject::CheckUpgradeOnHit_MetalPerHit"
			{
				"linux"
				{
					"signature"		"CBaseObject::CheckUpgradeOnHit"
					"offset"		"0x8D"
				}
			}
			
			"CTFPaintballRifle::TertiaryAttack_StartLagCompensation"
			{
				"linux"
				{
					"signature"			"CTFPaintballRifle::TertiaryAttack"
					"offset"			"0x25E"
				}
			}
		}
        "Offsets"
        {
			"CTakeDamageInfo::m_vecDamageForce.x"
			{
				"linux"		"0"
			}
			"CTakeDamageInfo::m_vecDamageForce.y"
			{
				"linux"		"4"
			}
			"CTakeDamageInfo::m_vecDamageForce.z"
			{
				"linux"		"8"
			}

			"CTakeDamageInfo::m_vecDamagePosition.x"
			{
				"linux"		"12"
			}
			"CTakeDamageInfo::m_vecDamagePosition.y"
			{
				"linux"		"16"
			}
			"CTakeDamageInfo::m_vecDamagePosition.z"
			{
				"linux"		"20"
			}

			"CTakeDamageInfo::m_vecReportedPosition.x"
			{
				"linux"		"24"
			}
			"CTakeDamageInfo::m_vecReportedPosition.y"
			{
				"linux"		"28"
			}
			"CTakeDamageInfo::m_vecReportedPosition.z"
			{
				"linux"		"32"
			}

			"CTakeDamageInfo::m_hInflictor"
			{
				"linux"		"36"
			}
			"CTakeDamageInfo::m_hAttacker"
			{
				"linux"		"40"
			}
			"CTakeDamageInfo::m_hWeapon"
			{
				"linux"		"44"
			}

			"CTakeDamageInfo::m_flDamage"
			{
				"linux"		"48"
			}
			"CTakeDamageInfo::m_flMaxDamage"
			{
				"linux"		"52"
			}
			"CTakeDamageInfo::m_flBaseDamage"
			{
				"linux"		"56"
			}

			"CTakeDamageInfo::m_bitsDamageType"
			{
				"linux"		"60"
			}
			"CTakeDamageInfo::m_iDamageCustom"
			{
				"linux"		"64"
			}

			"CTakeDamageInfo::m_iCritType"
			{
				"linux"		"108"
			}
		
			"CBaseEntity::ShouldCollide"
			{
				"linux"		"19"
			}
			"CBaseEntity::AcceptInput"
			{
				"linux"		"41"
			}
			"CBaseEntity::OnTakeDamage"
			{
				"linux"		"76"
			}
			"CBaseEntity::Touch"
			{
				"linux"		"113"
			}
			
			"CBaseEntity::IsDeflectable"
			{
				"linux"		"169"
			}
			"CBaseEntity::Deflected"
			{
				"linux"		"171"
			}
			"CBaseEntity::VPhysicsCollision"
			{
				"linux"		"179"
			}
			
			"CBaseEntity::m_RefEHandle"
			{
				"linux"		"964"
			}
			
			"CTFSniperRifle::m_hSniperDot"
			{
				"linux"		"2120"
			}
		
			"CTFFlameEntity::m_hOwner"
			{
				"linux"		"116"
			}
		
			"CUtlVector::m_Size"
			{
				"linux"		"12"
			}
		
            //player
        
			"CBaseCombatCharacter::GiveAmmo"
			{
				"linux"		"277"
			}
			"CTFPlayer::GiveAmmo"
			{
				"linux"		"515"
			}
		
			"CTFPlayer::SetAnimation"
			{
				"linux"		"401"
			}
			
			"CTFPlayer::WantsLagCompensationOnEntity"
			{
				"linux"		"358"
			}
		
			"CTFPlayer::TakeHealth"
			{
				"linux"		"512"
			}
			"CTFPlayer::OnTakeDamageAlive"
			{
				"linux"		"301"
			}
			"CTFPlayer::GetMaxHealth"
			{
				"linux"		"514"
			}
			
			"CTFPlayer::Event_KilledOther"
			{
				"linux"		"81"
			}
			
			"CTFPlayer::m_pCurrentCommand"
			{
				"linux"		"3732"
			}
			"CTFPlayer::m_bMiniCrit"
			{
				"linux"		"6649"
			}
			
			//pointer to player contained in CTFPlayerShared
			"CTFPlayerShared::m_pOuter"
			{
				"linux"		"1396"
			}
			
			"CTFGameRules::m_bScrambleTeams"
			{
				"linux"		"593"
			}
			"CTFGameRules::m_flMapResetTime"
			{
				"linux"		"1392"
			}
			
			"CTFGameMovement::m_pTFPlayer"
			{
				"linux"		"3752"
			}
            
            //buildings
            
			"CTFWeaponBuilder::SetSubType"
			{
				"linux"		"251"
			}
			"CTFWeaponBuilder::SetObjectMode"
			{
				"linux"		"476"
			}
			
            "CBaseObject::StartBuilding"
            {
                "linux"     "361"
            }
			"CBaseObject::Killed"
			{
				"linux"		"366"
			}
            "CBaseObject::OnGoActive"
            {
                "linux"     "374"
            }
            "CBaseObject::CanBeUpgraded"
            {
                "linux"     "379"
            }
            "CBaseObject::StartUpgrading"
            {
                "linux"     "380"
            }
            "CBaseObject::FinishUpgrading"
            {
                "linux"     "381"
            }
            "CBaseObject::MakeCarriedObject"
            {
                "linux"     "385"
            }
            "CBaseObject::m_iGoalUpgradeLevel"
            {
                "linux"     "2372"
            }
            
            //weapons
			
			"CBaseCombatWeapon::SendWeaponAnim"
			{
				"linux"		"250"
			}
			"CTFWeaponBase::Deploy"
			{
				"linux"		"284"
			}
			"CTFWeaponBase::Holster"
			{
				"linux"		"285"
			}
			"CTFWeaponBase::ItemPostFrame"
			{
				"linux"		"296"
			}
			"CTFWeaponBase::PrimaryAttack"
			{
				"linux"		"312"
			}
			"CTFWeaponBase::SecondaryAttack"
			{
				"linux"		"313"
			}
			"CTFWeaponBase::GetWeaponID"
			{
				"linux"		"410"
			}
			
			"CTFWeaponBase::m_bCurrentAttackIsCrit"
			{
				"linux"		"1810"
			}
			
			"CTFWeaponBaseGun::FireProjectile"
			{
				"linux"		"477"
			}
			"CTFWeaponBaseGun::GetProjectileFireSetup"
			{
				"linux"		"478"
			}
			
			"CTFBaseGrenade::GetDamageType"
			{
				"linux"		"142"
			}
			"CTFBaseGrenade::Detonate"
			{
				"linux"		"252"
			}
			"CTFBaseGrenade::m_flDamage"
			{
				"linux"		"1428"
			}
			"CTFBaseGrenade::m_flRadius"
			{
				"linux"		"1432"
			}
			"CTFGrenadePipebombProjectile::ShouldExplodeOnEntity"
			{
				"linux"		"262"
			}
			"CTFGrenadePipebombProjectile::m_bTouched"
			{
				"linux"		"1480"
			}
			
			"CAttributeManager::ApplyAttributeFloat"
			{
				"linux"		"3"
			}
        }
		
		//2.2 compiler changes broke a bunch of the calling conventions, most are probably wrong now
		"Functions"
		{
			"CTFGameRules::ResetMapTime"
			{
				"signature"		"CTFGameRules::ResetMapTime"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
			}
		
			"CTFTeam::GetDominationPointRate"
			{
				"signature"		"CTFTeam::GetDominationPointRate"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"address"
			}
		
			"CBaseEntity::ShouldCollide"
			{
				"offset"		"CBaseEntity::ShouldCollide"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"collisionGroup"
					{
						"type"	"int"
					}
					"contentsMask"
					{
						"type"	"int"
					}
				}
			}
		
			"CBaseEntity::Touch"
			{
				"offset"		"CBaseEntity::Touch"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"other"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CFuncRespawnRoom::RespawnRoomTouch"
			{
				"signature"		"CFuncRespawnRoom::RespawnRoomTouch"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"other"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"CBaseEntity::AcceptInput"
			{
				"offset"		"CBaseEntity::AcceptInput"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"input"
					{
						"type"	"charptr"
					}
					"activator"
					{
						"type"	"cbaseentity"
					}
					"caller"
					{
						"type"	"cbaseentity"
					}
					"value"
					{
						"type"	"objectptr"
					}
					"outputid"
					{
						"type"	"int"
					}
				}
			}
			
			"CBaseEntity::VPhysicsCollision"
			{
				"offset"		"CBaseEntity::VPhysicsCollision"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"other"
					{
						"type"	"int"
					}
					"event"
					{
						"type"	"objectptr"
					}
				}
			}
		
			//player
			
			"CBaseCombatCharacter::Weapon_CanSwitchTo"
			{
				"signature"		"CBaseCombatCharacter::Weapon_CanSwitchTo"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"weapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"CBaseCombatCharacter::GiveAmmo"
			{
				"offset"		"CBaseCombatCharacter::GiveAmmo"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"entity"
				"arguments"
				{
					"amount"
					{
						"type"	"int"
					}
					"type"
					{
						"type"	"int"
					}
					"silent"
					{
						"type"	"bool"
					}
					"source"
					{
						"type"	"int"
					}
				}
			}
			
			"CBaseCombatCharacter::SetAmmoCount"
			{
				"signature"		"CBaseCombatCharacter::SetAmmoCount"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"amount"
					{
						"type"	"int"
					}
					"type"
					{
						"type"	"int"
					}
				}
			}
			
			"CBaseEntity::OnTakeDamage"
			{
				"offset"		"CBaseEntity::OnTakeDamage"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"entity"
				"arguments"
				{
					"damageinfo"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::OnTakeDamageAlive"
			{
				"offset"		"CTFPlayer::OnTakeDamageAlive"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"entity"
				"arguments"
				{
					"damageinfo"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::GetMedigun"
			{
				"signature"		"CTFPlayer::GetMedigun"
				"callconv"		"thiscall"
				"return"		"cbaseentity"
				"this"			"entity"
			}
			"CTFPlayer::TakeHealth"
			{
				"offset"		"CTFPlayer::TakeHealth"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"entity"
				"arguments"
				{
					"amount"
					{
						"type"	"float"
					}
					"flags"
					{
						"type"	"int"
					}
					"source"
					{
						"type"	"cbaseentity"
					}
					"critheal"
					{
						"type"	"bool"
					}
				}
				
			}
			"CTFPlayer::WantsLagCompensationOnEntity"
			{
				"offset"		"CTFPlayer::WantsLagCompensationOnEntity"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"other"
					{
						"type"	"cbaseentity"
					}
					"dontcare"
					{
						"type"	"objectptr"
					}
					"dontcare2"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::DropFlag"
			{
				"signature"		"CTFPlayer::DropFlag"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFPlayer::ApplyPushFromDamage"
			{
				"signature"		"CTFPlayer::ApplyPushFromDamage"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"damageinfo"
					{
						"type"	"objectptr"
					}
					"force"
					{
						"type"	"vectorptr"
					}
				}
			}
			"CTFPlayer::Event_KilledOther"
			{
				"offset"		"CTFPlayer::Event_KilledOther"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"victim"
					{
						"type"	"cbaseentity"
					}
					"info"
					{
						"type"	"objectptr"
					}
				}
			}
			
			"CTFPlayerShared::AirblastPlayer"
			{
				"signature"		"CTFPlayerShared::AirblastPlayer"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
				"arguments"
				{
					"attacker"
					{
						"type"	"cbaseentity"
					}
					"dir"
					{
						"type"	"vectorptr"
					}
					"force"
					{
						"type"	"float"
					}
				}
			}
			"CTFPlayerShared::Burn"
			{
				"signature"		"CTFPlayerShared::Burn"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
				"arguments"
				{
					"attacker"
					{
						"type"	"cbaseentity"
					}
					"weapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayerShared::HealNegativeConds"
			{
				"signature"		"CTFPlayerShared::HealNegativeConds"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"address"
			}
			"CTFPlayerShared::RecalculateChargeEffects"
			{
				"signature"		"CTFPlayerShared::RecalculateChargeEffects"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
				"arguments"
				{
					"instant"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayerShared::AddBurstHealer"
			{
				"signature"		"CTFPlayerShared::AddBurstHealer"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
				"arguments"
				{
					"source"
					{
						"type"	"cbaseentity"
					}
					"amount"
					{
						"type"	"float"
					}
					"dontcare"
					{
						"type"	"int"
					}
					"dontcare2"
					{
						"type"	"int"
					}

				}
			}
            
			"CTFGameRules::ApplyOnDamageModifyRules"
			{
				"signature"		"CTFGameRules::ApplyOnDamageModifyRules"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"address"
				"arguments"
				{
					"damageinfo"
					{
						"type"	"objectptr"
					}
					"target"
					{
						"type"	"cbaseentity"
					}
					"candamage"
					{
						"type"	"bool"
					}
				}
			}
			"CTFGameRules::ApplyOnDamageAliveModifyRules"
			{
				"signature" "CTFGameRules::ApplyOnDamageAliveModifyRules"
				"callconv"	"thiscall"
				"return"	"float"
				"this"		"address"
				"arguments"
				{
					"damageinfo"
					{
						"type"	"objectptr"
					}
					"target"
					{
						"type"	"cbaseentity"
					}
					"damagemodifyextras"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayerShared::GetBuffedMaxHealth"
			{
				"signature"	"CTFPlayerShared::GetBuffedMaxHealth"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"address"
			}
			
			"CTFGameMovement::CheckJumpButton"
			{
				"signature"	"CTFGameMovement::CheckJumpButton"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
			}
			
            //buildings
            
			"CBaseObject::Killed"
			{
				"offset"		"CBaseObject::Killed"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
				}
			}
            "CBaseObject::StartBuilding"
            {
                "offset"        "CBaseObject::StartBuilding"
                "callconv"      "thiscall"
                "return"        "void"
                "this"          "entity"
                "arguments"
                {
                    "player"
                    {
                        "type"  "cbaseentity"
                    }
                }
            }
            "CBaseObject::OnGoActive"
            {
                "offset"        "CBaseObject::OnGoActive"
                "callconv"      "thiscall"
                "return"        "void"
                "this"          "entity"
            }
            "CBaseObject::CanBeUpgraded"
            {
                "offset"        "CBaseObject::CanBeUpgraded"
                "callconv"      "thiscall"
                "return"        "bool"
                "this"          "entity"
                "arguments"
                {
                    "player"
                    {
                        "type"  "cbaseentity"
                    }
                }
            }
            "CBaseObject::StartUpgrading"
            {
                "offset"        "CBaseObject::StartUpgrading"
                "callconv"      "thiscall"
                "return"        "void"
                "this"          "entity"
            }
            "CBaseObject::FinishUpgrading"
            {
                "offset"        "CBaseObject::FinishUpgrading"
                "callconv"      "thiscall"
                "return"        "void"
                "this"          "entity"
            }
            "CBaseObject::MakeCarriedObject"
            {
                "offset"        "CBaseObject::MakeCarriedObject"
                "callconv"      "thiscall"
                "return"        "void"
                "this"          "entity"
                "arguments"
                {
                    "player"
                    {
                        "type"  "cbaseentity"
                    }
                }
            }
            
			"CObjectDispenser::GetDispenserRadius"
			{
				"signature"		"CObjectDispenser::GetDispenserRadius"
				"callconv"		"thiscall"
				"return"		"float"
				"this"			"entity"
			}
			"CObjectDispenser::GetHealRate"
			{
				"signature"		"CObjectDispenser::GetHealRate"
				"callconv"		"thiscall"
				"return"		"float"
				"this"			"entity"
			}
			
			"CTFWrench::GetConstructionValue"
			{
				"signature"		"CTFWrench::GetConstructionValue"
				"callconv"		"thiscall"
				"return"		"float"
				"this"			"entity"
			}
			"CTFWrench::GetRepairValue"
			{
				"signature"		"CTFWrench::GetRepairValue"
				"callconv"		"thiscall"
				"return"		"float"
				"this"			"entity"
			}
			
			"CTFWrench::OnFriendlyBuildingHit"
			{
				"signature"		"CTFWrench::OnFriendlyBuildingHit"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"object"
					{
						"type"	"cbaseentity"
					}
					"player"
					{
						"type"	"cbaseentity"
					}
					"hitpos"
					{
						"type"	"vectorptr"
					}
				}
			}
				
			//weapons
			
			"CTFWeaponBase::ApplyOnHitAttributes"
			{
				"signature"		"CTFWeaponBase::ApplyOnHitAttributes"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"inflictor"
					{
						"type"	"cbaseentity"
					}
					"player"
					{
						"type"	"cbaseentity"
					}
					"takedamageinfo"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFWeaponBase::ItemPostFrame"
			{
				"offset"		"CTFWeaponBase::ItemPostFrame"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFWeaponBase::PrimaryAttack"
			{
				"offset"		"CTFWeaponBase::PrimaryAttack"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFWeaponBase::SecondaryAttack"
			{
				"offset"		"CTFWeaponBase::SecondaryAttack"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFWeaponBase::Holster"
			{
				"offset"		"CTFWeaponBase::Holster"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"switchto"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFWeaponBase::Deploy"
			{
				"offset"		"CTFWeaponBase::Deploy"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
			}
			
			"CTFWeaponBaseGun::FireProjectile"
			{
				"offset"		"CTFWeaponBaseGun::FireProjectile"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"cbaseentity"
				"this"			"entity"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"CTFPaintballRifle::HitAlly"
			{
				"signature"		"CTFPaintballRifle::HitAlly"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"target"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
            //projectiles
            
			"CTFBaseRocket::Spawn"
			{
				"signature"		"CTFBaseRocket::Spawn"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFBaseRocket::DetonateThink"
			{
				"signature"		"CTFBaseRocket::DetonateThink"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFProjectile_SentryRocket::Spawn"
			{
				"signature"		"CTFProjectile_SentryRocket::Spawn"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFBaseRocket::RocketTouch"
			{
				"signature"		"CTFBaseRocket::RocketTouch"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"other"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseProjectile::ResetCollideWithTeammates"
			{
				"signature"		"CBaseProjectile::ResetCollideWithTeammates"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			
			"CTraceFilterSimple::ShouldHitEntity"
			{
				"signature"		"CTraceFilterSimple::ShouldHitEntity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"address"
				"arguments"
				{
					"toucher"
					{
						"type"	"objectptr"
					}
					"fuck2"
					{
						"type"	"int"
					}
				}
			}
			"CTraceFilterIgnoreTeammatesExceptEntity::ShouldHitEntity"
			{
				"signature"		"CTraceFilterIgnoreTeammatesExceptEntity::ShouldHitEntity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"address"
				"arguments"
				{
					"toucher"
					{
						"type"	"objectptr"
					}
					"fuck2"
					{
						"type"	"int"
					}
				}
			}
			
			"CTFBaseGrenade::GetDamageType"
			{
				"offset"	"CTFBaseGrenade::GetDamageType"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
			}
			"CTFGrenadePipebombProjectile::Create"
			{
				"signature"		"CTFGrenadePipebombProjectile::Create"
				"callconv"		"cdecl"
				"return"		"cbaseentity"
				"this"			"ignore"
				"arguments"
				{
					"position"
					{
						"type"	"vectorptr"
					}
					"angles"
					{
						"type"	"vectorptr"
					}
					"velocity"
					{
						"type"	"vectorptr"
					}
					"angVelocity"
					{
						"type"	"vectorptr"
					}
					"owner"
					{
						"type"	"cbaseentity"
					}
					"weapon"
					{
						"type"	"cbaseentity"
					}
					"type"
					{
						"type" "int"
					}
				}
			}
			"CTFGrenadePipebombProjectile::ShouldExplodeOnEntity"
			{
				"offset"		"CTFGrenadePipebombProjectile::ShouldExplodeOnEntity"
				"hooktype"		"entity"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"touched"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"CTFFlameThrower::SimulateFlames"
			{
				"signature"		"CTFFlameThrower::SimulateFlames"
				"callconv"		"thiscall"
				"this"			"entity"
				"return"		"void"
			}
			
			"CTFFlameEntity::FlameThink"
			{
				"signature"		"CTFFlameEntity::FlameThink"
				"callconv"		"thiscall"
				"this"			"address"
				"return"		"bool"
			}
			"CTFFlameEntity::CheckCollision"
			{
				"signature"		"CTFFlameEntity::CheckCollision"
				"callconv"		"thiscall"
				"this"			"address"
				"return"		"void"
				"arguments"
				{
					"other"
					{
						"type"	"cbaseentity"
					}
					"dontcare"
					{
						"type"	"int"
					}
				}
			}
			"CTFFlameEntity::OnCollide"
			{
				"signature"		"CTFFlameEntity::OnCollide"
				"callconv"		"thiscall"
				"this"			"address"
				"return"		"void"
				"arguments"
				{
					"touched"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFFlameEntity::OnCollideWithTeammate"
			{
				"signature"		"CTFFlameEntity::OnCollideWithTeammate"
				"callconv"		"thiscall"
				"this"			"address"
				"return"		"void"
				"arguments"
				{
					"touched"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"MapEntity_ParseEntity"
			{
				"signature"		"MapEntity_ParseEntity"
				"callconv"		"cdecl"
				"return"		"charptr"
				"arguments"
				{
					"out"
					{
						"type"	"objectptr"
					}
					"entdata"
					{
						"type"	"charptr"
					}
					"filter"
					{
						"type"	"objectptr"
					}
				}
			}
		}
		
		"Signatures"
		{
			"CGlobalEntityList::FindEntityInSphere"
			{
				"library"	"server"
				"linux"		"@_ZN17CGlobalEntityList18FindEntityInSphereEP11CBaseEntityRK6Vectorf"
			}
		
			"CBaseAnimating::ResetSequence"
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating13ResetSequenceEi"
			}
		
			"CTFGameRules::ResetMapTime"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules12ResetMapTimeEv"
			}
		
			"m_hEntitiesBurnt::InsertBefore"
			{
				"library"	"server"
				"linux"		"@_ZN10CUtlVectorI7CHandleI11CBaseEntityE10CUtlMemoryIS2_iEE12InsertBeforeEiRKS2_"
			}
		
			"CBaseEntity::WorldSpaceCenter"
			{
				"library"	"server"
				"linux"		"@_ZNK11CBaseEntity16WorldSpaceCenterEv"
			}
		
			"CFuncRespawnRoom::RespawnRoomTouch"
			{
				"library"	"server"
				"linux"		"@_ZN16CFuncRespawnRoom16RespawnRoomTouchEP11CBaseEntity"
			}
			"PointInRespawnRoom"
			{
				"library"	"server"
				"linux"		"@_Z18PointInRespawnRoomP11CBaseEntityRK6Vectorb"
			}
		
            //player
			"CBaseCombatCharacter::SwitchToNextBestWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN20CBaseCombatCharacter22SwitchToNextBestWeaponEP17CBaseCombatWeapon"
			}
			"CBaseCombatCharacter::SetAmmoCount"
			{
				"library"	"server"
				"linux"		"@_ZN20CBaseCombatCharacter12SetAmmoCountEii"
			}
			
			"CTFPlayer::GetMedigun"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer10GetMedigunEv"
			}
			"CTFPlayer::GiveEconItem"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12GiveEconItemEPKcii"
			}
            "CTFPlayer::GetEntityForLoadoutSlot"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer23GetEntityForLoadoutSlotE14ETFLoadoutSlot"
			}
			"CTFPlayer::GetMedigunCharge"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer19MedicGetChargeLevelEv"
			}
            "CTFPlayer::DetonateOwnedObjectsOfType"
            {
                "library"   "server"
                "linux"     "@_ZN9CTFPlayer26DetonateOwnedObjectsOfTypeEiib"
            }
            "CTFPlayer::GetObject"
            {
                "library"   "server"
                "linux"     "@_ZN9CTFPlayer9GetObjectEi"
            }
            "CTFPlayer::GetObjectCount"
            {
                "library"   "server"
                "linux"     "@_ZN9CTFPlayer14GetObjectCountEv"
            }
			"CTFPlayer::ApplyPushFromDamage"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer19ApplyPushFromDamageERK15CTakeDamageInfo6Vector"
			}
			"CTFPlayer::DropFlag"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer8DropFlagEv"
			}
			"CTFPlayer::AddDamagerToHistory"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer19AddDamagerToHistoryEP11CBaseEntityS1_"
			}
			"CTFPlayer::SpeakConceptIfAllowed"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
			}
			"CTFPlayer::TakeDisguiseHealth"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer18TakeDisguiseHealthEfi"
			}
			
			"CTFPlayerShared::Burn"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared4BurnEP9CTFPlayerP13CTFWeaponBase"
			}
			"CTFPlayerShared::HealNegativeConds"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared17HealNegativeCondsEv"
			}
			"CTFPlayerShared::GetBuffedMaxHealth"
			{
				"library"	"server"
				"linux"		"@_ZNK15CTFPlayerShared18GetMaxBuffedHealthEv"
			}
			
			"CTFPlayerShared::AirblastPlayer"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared14AirblastPlayerEP9CTFPlayerRK6Vectorf"
			}
			
			"CTFPlayerShared::Heal"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared4HealEP9CTFPlayerfP11CBaseObjectbb"
			}
			"CTFPlayerShared::HealNoOverheal"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared14HealNoOverhealEP9CTFPlayerfP11CBaseObjectb"
			}
			"CTFPlayerShared::HealTimed"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared9HealTimedEP9CTFPlayerffbbP11CBaseObject"
			}
			"CTFPlayerShared::StopHealing"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared11StopHealingEP9CTFPlayer10HealerType"
			}
			"CTFPlayerShared::AddBurstHealer"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared14AddBurstHealerEP9CTFPlayerf7ETFCondf"
			}
			
				
			"CTFGameMovement::CheckJumpButton"
			{
				"linux"		"@_ZN15CTFGameMovement15CheckJumpButtonEv"
			}
			
            //buildings

            "CBaseObject::DestroyScreens"
            {
                "library"   "server"
                "linux"     "@_ZN11CBaseObject14DestroyScreensEv"
            }
			"CBaseObject::CheckUpgradeOnHit"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseObject17CheckUpgradeOnHitEP9CTFPlayer"
			}
			"CObjectDispenser::GetHealRate"
			{
				"library"	"server"
				"linux"		"@_ZN16CObjectDispenser11GetHealRateEv"
			}
			"CObjectDispenser::GetDispenserRadius"
			{
				"library"	"server"
				"linux"		"@_ZN16CObjectDispenser18GetDispenserRadiusEv"
			}
            
            //weapons
            
            "CTFWeaponBase::ApplyOnHitAttributes"
			{
				"library"	"server"
				"linux"		"@_ZN13CTFWeaponBase20ApplyOnHitAttributesEP11CBaseEntityS1_RK15CTakeDamageInfo"
			}
			
			"CTFPaintballRifle::HitAlly"
			{
				"library"	"server"
				"linux"		"@_ZN17CTFPaintballRifle7HitAllyEP11CBaseEntity"
			}
			"CTFPaintballRifle::TertiaryAttack"
			{
				"library"	"server"
				"linux"		"@_ZN17CTFPaintballRifle14TertiaryAttackEv"
			}
			
			"CTFWeaponBase::CalcAttackIsCritical"
			{
				"library"	"server"
				"linux"		"@_ZN13CTFWeaponBase20CalcIsAttackCriticalEv"
			}
			
			"CTFWeaponBaseGun::GetProjectileReflectSetup"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFWeaponBaseGun25GetProjectileReflectSetupEP9CTFPlayerRK6VectorRS2_bb"
			}
            
			"CTFWeaponBonesaw::UpdateChargeLevel"
			{
				"library"	"server"
				"linux"		"@_ZN10CTFBonesaw17UpdateChargeLevelEv"
			}
			
			"CTFWrench::OnFriendlyBuildingHit"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFWrench21OnFriendlyBuildingHitEP11CBaseObjectP9CTFPlayer6Vector"
			}
			"CTFWrench::GetConstructionValue"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFWrench20GetConstructionValueEv"
			}
			"CTFWrench::GetRepairValue"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFWrench14GetRepairValueEv"
			}
			
            //projectiles
            
            "CTFBaseRocket::Spawn"
			{
				"library"	"server"
				"linux"		"@_ZN13CTFBaseRocket5SpawnEv"
			}
			"CTFBaseRocket::DetonateThink"
			{
				"library"	"server"
				"linux"		"@_ZN13CTFBaseRocket13DetonateThinkEv"
			}
			"CTFProjectile_SentryRocket::Spawn"
			{
				"library"	"server"
				"linux"		"@_ZN26CTFProjectile_SentryRocket5SpawnEv"
			}
            "CTFBaseRocket::RocketTouch"
			{
				"library"	"server"
				"linux"		"@_ZN13CTFBaseRocket11RocketTouchEP11CBaseEntity"
			}
			"CBaseProjectile::ResetCollideWithTeammates"
			{
				"library"	"server"
				"linux"		"@_ZN15CBaseProjectile25ResetCollideWithTeammatesEv"
			}
			
			"CTFGrenadePipebombProjectile::Create"
			{
				"library"	"server"
				"linux"		"@_ZN28CTFGrenadePipebombProjectile6CreateERK6VectorRK6QAngleS2_S2_P11CBaseEntityS7_i"
			}
			"CTFBrickProjectile::Create"
			{
				"library"	"server"
				"linux"		"@_ZN18CTFBrickProjectile6CreateERK6VectorRK6QAngleS2_S2_P11CBaseEntityS7_i"
			}
			
			"CTFFlameThrower::SimulateFlames"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFFlameThrower14SimulateFlamesEv"
			}
			
			"CTFFlameEntity::OnCollide"
			{
				"library"	"server"
				"linux"		"@_ZN14CTFFlameEntity9OnCollideEP11CBaseEntity"
			}
			"CTFFlameEntity::OnCollideWithTeammate"
			{
				"library"	"server"
				"linux"		"@_ZN14CTFFlameEntity21OnCollideWithTeammateEP9CTFPlayer"
			}
			"CTFFlameEntity::FlameThink"
			{
				"library"	"server"
				"linux"		"@_ZN14CTFFlameEntity10FlameThinkEv"
			}
			"CTFFlameEntity::CheckCollision"
			{
				"library"	"server"
				"linux"		"@_ZN14CTFFlameEntity14CheckCollisionEP11CBaseEntityPb"
			}
			
            //econ
			
			"CEconItemView::IterateAttributes"
			{
				"library"	"server"
				"linux"		"@_ZN13CEconItemView17IterateAttributesE8string_t"
			}
			
			"GetItemSchema"
			{
				"library"	"server"
				"linux"		"@_Z13GetItemSchemav"
			}
			"CEconItemSchema::GetItemDefinition"
			{
				"library"	"server"
				"linux"		"@_ZN15CEconItemSchema17GetItemDefinitionEi"
			}
			
			"CAttributeManager::AttribHookValue<float>"
			{
				"library"	"server"
				"linux"		"@_ZN17CAttributeManager15AttribHookValueIfEET_S1_PKcPK11CBaseEntity"
			}
			"CAttributeManager::AttribHookValue<int>"
			{
				"library"	"server"
				"linux"		"@_ZN17CAttributeManager15AttribHookValueIiEET_S1_PKcPK11CBaseEntity"
			}
		
            //other
        
			"CBaseAnimating::LookupSequence"
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating14LookupSequenceEPKc"
			}
			
			"CBaseEntity::SetNextThink"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity12SetNextThinkEfPKc"
			}
			"CBaseEntity::SetCollisionGroup"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity17SetCollisionGroupEi"
			}
			
			"CGlobalEntityList::FindEntityByName"
			{
				"library"	"server"
				"linux"		"@_ZN17CGlobalEntityList16FindEntityByNameEP11CBaseEntityPKcS1_S1_S1_P17IEntityFindFilter"
			}
			
			"CTFGameRules::ApplyOnDamageModifyRules"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules24ApplyOnDamageModifyRulesER15CTakeDamageInfoP11CBaseEntityb"
			}
			"CTFGameRules::ApplyOnDamageAliveModifyRules"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules29ApplyOnDamageAliveModifyRulesERK15CTakeDamageInfoP11CBaseEntityRNS_20DamageModifyExtras_tE"
			}
			"CTFGameRules::SetWinningTeam"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules14SetWinningTeamEiibbbb"
			}
			
			"CTFAmmoPack::PackTouch"
			{
				"library"	"server"
				"linux"		"@_ZN11CTFAmmoPack9PackTouchEP11CBaseEntity"
			}
			"CItem::ItemTouch"
			{
				"library"	"server"
				"linux"		"@_ZN5CItem9ItemTouchEP11CBaseEntity"
			}
			
			"CObjectDispenser::DispenseAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN16CObjectDispenser12DispenseAmmoEP9CTFPlayer"
			}
			"CAmmoPack::MyTouch"
			{
				"library"	"server"
				"linux"		"@_ZN9CAmmoPack7MyTouchEP11CBasePlayer"
			}
			"CCollisionProperty::SetSolid"
			{
				"library"	"server"
				"linux"		"@_ZN18CCollisionProperty8SetSolidE11SolidType_t"
			}
			"CCollisionProperty::SetSolidFlags"
			{
				"library"	"server"
				"linux"		"@_ZN18CCollisionProperty13SetSolidFlagsEi"
			}
			"CBaseEntity::SetSize"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity7SetSizeERK6VectorS2_"
			}
			
			"CTraceFilterSimple::ShouldHitEntity"
			{
				"library"	"server"
				"linux"		"@_ZN18CTraceFilterSimple15ShouldHitEntityEP13IHandleEntityi"
			}
			"CTraceFilterIgnoreTeammatesExceptEntity::ShouldHitEntity"
			{
				"library"	"server"
				"linux"		"@_ZN39CTraceFilterIgnoreTeammatesExceptEntity15ShouldHitEntityEP13IHandleEntityi"
			}
			
			"CTFLogicDomination"
			{
				"library"	"server"
				"linux"		"@g_pDominationLogic"
			}
			"CTFGameRules"
			{
				"library" 	"server"
				"linux"   	"@g_pGameRules"
			}
			"CTFObjectiveResource"
			{
				"library"	"server"
				"linux"		"@g_pObjectiveResource"
			}
			"CTFGameStats"
			{
				"library"	"server"
				"linux"  	"@CTF_GameStats"
			}
			
			"CTFGameStats::Event_PlayerHealedOther"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats23Event_PlayerHealedOtherEP9CTFPlayerf"
			}
			"CTFGameStats::Event_PlayerLeachedHealth"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats25Event_PlayerLeachedHealthEP9CTFPlayerbf"
			}
			"CTFGameStats::Event_PlayerBlockedDamage"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats25Event_PlayerBlockedDamageEP9CTFPlayeri"
			}
			"CTFGameStats::Event_PlayerDamage"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats18Event_PlayerDamageEP11CBasePlayerRK15CTakeDamageInfoi"
			}
			
			"CEnableLagCompensation::CEnableLagCompensation"
			{
				"library"	"server"
				"linux"		"@_ZN22CEnableLagCompensationC2EP11CBasePlayerP8CUserCmdb"
			}
			"CEnableLagCompensation::~CEnableLagCompensation"
			{
				"library"	"server"
				"linux"		"@_ZN22CEnableLagCompensationD2Ev"
			}
			
			"GetGlobalTeam"
			{
				"library"	"server"
				"linux"		"@_Z13GetGlobalTeami"
			}
			"CTFTeam::SetRoundScore"
			{
				"library"	"server"
				"linux"		"@_ZN7CTFTeam13SetRoundScoreEi"
			}
			"CTFTeam::GetDominationPointRate"
			{
				"library"	"server"
				"linux"		"@_ZN7CTFTeam22GetDominationPointRateEv"
			}
			
			"MapEntity_ExtractValue"
			{
				"library"	"server"
				"linux"		"@_Z22MapEntity_ExtractValuePKcS0_Pc"
			}
			"MapEntity_ParseToken"
			{
				"library"	"server"
				"linux"		"@_Z20MapEntity_ParseTokenPKcPc"
			}
			"MapEntity_ParseEntity"
			{
				"library"	"server"
				"linux"		"@_Z21MapEntity_ParseEntityRP11CBaseEntityPKcP16IMapEntityFilter"
			}
			
			"CAttributeManager::ApplyAttributeString"
			{
				"library"	"server"
				"linux"		"@_ZN17CAttributeManager20ApplyAttributeStringE8string_tPK11CBaseEntityS0_"
			}
			"CAttributeContainer::ApplyAttributeString"
			{
				"library"	"server"
				"linux"		"@_ZN19CAttributeContainer20ApplyAttributeStringE8string_tPK11CBaseEntityS0_"
			}
		}
    }
}